// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: category_quantities.sql

package sqlgen

import (
	"context"
)

const decrementCategoryQuantityCol = `-- name: DecrementCategoryQuantityCol :one
WITH selected_quantity AS (SELECT row, col
                           FROM category_quantities
                           WHERE category_quantities.category_id = $1
                             AND col > 0
                           LIMIT 1),
     updated_quantity AS (
         UPDATE
             category_quantities
                 SET col = col - 1
                 WHERE category_quantities.category_id = $1
                     AND category_quantities.row = (SELECT row FROM selected_quantity)
                 RETURNING row, col)
SELECT row, col
FROM updated_quantity
`

type DecrementCategoryQuantityColRow struct {
	Row int32
	Col int32
}

func (q *Queries) DecrementCategoryQuantityCol(ctx context.Context, categoryID int16) (DecrementCategoryQuantityColRow, error) {
	row := q.db.QueryRow(ctx, decrementCategoryQuantityCol, categoryID)
	var i DecrementCategoryQuantityColRow
	err := row.Scan(&i.Row, &i.Col)
	return i, err
}
